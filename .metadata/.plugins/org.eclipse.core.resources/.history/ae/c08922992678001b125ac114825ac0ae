import java.io.*;


public class prime_number2 {
	
	public static void main(String[] args) throws IOException {
		BufferedReader bf = new BufferedReader(new
				InputStreamReader(System.in));
		
		
		String[] s = new String[2];
		s = bf.readLine().split(" ");
		
		int n,m;
		m = Integer.parseInt(s[0]);
		n = Integer.parseInt(s[1]);
		
		for(int j=2; j<=Math.sqrt(n); j++) 
		{
			if(n%j==0) 
			{
				System.out.println(j);
				break;
			}
			
		}
		
		bf.close();

	}

}

// 다른 사람 풀이 => a의 공약수 중 중간의 값인 루트a를 기준으로 약수가 있는지 없는지를 판단, 약수가 있다면 루트a보다 작거나 같은 약수가
// 무조건 존재함.
//for(int j=2; j<=Math.sqrt(a); j++) {
//	if(a%j==0) {
//		count++;
//		break;
//	}
//}
